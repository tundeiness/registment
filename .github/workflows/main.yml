name: CI

on:
  push:
    branches: [ main, dev, equipment ]
  pull_request:
    branches: [ main, dev, equipment ]

jobs:
  test:
    runs-on: ubuntu-latest

    # services: 
    #   postgres:
    #     image: postgres:12
    #     env:
    #       POSTGRES_PASSWORD: postgres
    #     ports: ['5432:5432']

    steps:
      - uses: actions/checkout@v2
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1.45.0
        with:
          ruby-version: 2.7.3

      - uses: Borales/actions-yarn@v2.3.0
        with:
          cmd: install
      - name: Build and run tests
        env:
          DATABASE_URL: postgres://postgres:@localhost:5432/test
          RAILS_ENV: test
          # RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        # run: |
        #   sudo apt-get -yqq install libpq-dev
        #   gem install bundler

      - name: Install Dependencies
        run: |
          sudo apt install -yqq libpq-dev
          gem install bundler

      - name: Install Gems
        run: |
          bundle install --jobs 4 --retry 3
          bundle exec rails db:prepare
          bundle exec rails test
        # run: |
        #   bundle install

      # - name: Setup database
      #   env:
      #     PG_DATABASE: postgres
      #     PG_HOST: localhost
      #     PG_USER: postgres
      #     PG_PASSWORD: password
      #     RAILS_ENV: test
      #     WITH_COVERAGE: true
      #     DISABLE_SPRING: 1
      #   run: |
      #     bundle exec rails db:prepare
      #     bundle exec rake test

      - name: Build and test with rspec
        env:
          PG_DATABASE: postgres
          PG_HOST: localhost
          PG_USER: postgres
          PG_PASSWORD: password
          RAILS_ENV: test
        run: |
          bundle exec rspec spec

      - name: Create Coverage Artifact
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage
          path: coverage/